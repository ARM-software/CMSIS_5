/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\page createPackPublish Publish a Pack
There are multiple ways to distribute a software pack:

\section cp_prerequisites Prerequisites

Before you start to distribute a software pack, you need to make sure that it does not contain errors. An error- and
warning-free run of the \c gen_pack.bat script from the \ref PackTutorials is a good start. but you also need to make sure
that the schema has been validated. Pack Installer provides an easy mechanism to check the XML schema:
- Install the pack using Pack Installer.
- Right-click on the pack version number and select <b>Schema Check</b>: \n
  \image html schema_check.png
- The \b Output window shows the result. If errors are reported, please make sure to fix them before continuing.\n
  \image html schema_check_output.png
  This is
  especially important when handing in the pack to be indexed by \ref cp_KeilComPack "Arm's pack index service". The pack
  importer will ignore all PDSC files that do not pass the check against the most recently published PACK.xsd schema file
  and thus your pack will not be available for download.


\section cp_LocalInstallation Local Installation
The easiest way to distribute a software pack is attaching it to an email or using other means of electronic distribution
(for example using a company internal file server). The installation of a software pack is usually triggered by
double-clicking the Pack file. The pack management tool is invoked and the Pack is installed on the local machine. After
installation, the Pack will be shown in the list of installed packs (tool dependent). If the PDSC file does not contain a
valid \c \<url\> element, a manual installation is required to update a software pack. Otherwise, pack management tools can
check for updates on the server or the local machine that is specified by \c \<url\>.

\image html LocalInstallation.png "Local installation and update from URL"

\note For automatic updates on a local machine, specify the \c \<url\> using the
<a href="https://en.wikipedia.org/wiki/File_URI_scheme" target="_blank">file URI scheme</a>.


\section cp_WebDownload Web Download

Any web server can be used to host a software pack (specified by the \c \<url\> element in the PDSC file). At this location,
the following files can be present:
-# \elem{vendor}.\elem{name}.pdsc [required]: pack description file.
-# \elem{vendor}.\elem{name}.\elem{version}.pack [required]: pack file where \elem{version} refers to the latest version
   specified in the PDSC file.
-# \elem{vendor}.pidx [optional]: list with all packs hosted and maintained by the vendor (refer to \ref pidxFile)
-# \elem{vendor}.vidx [optional]: list of package index files known to the vendor (refer to \ref vidxFile)

All previous versions listed in the \elem{releases} section of the PDSC file should be present in that folder as well. This
will enable customers to revert updates or to be able to download a specific version of a software pack (for code
maintenance purposes for example).

\image html WebInstallation.png "Web installation and update"

\note
- It is important to understand how the \<url\> element works. If you specify a URL, for example
  <a href="http://www.keil.com/pack/" target="_blank">www.keil.com/pack</a>,
  then you have to make the PDSC file and the corresponding PACK file(s) available for download at that exact location.
  The naming of the files follow the standard naming rules. For example, the ARM::CMSIS PDSC and Pack files are available
  here:\n
  <a href="http://www.keil.com/pack/ARM.CMSIS.pdsc" target="_blank">www.keil.com/pack/ARM.CMSIS.pdsc</a> and \n
  <a href="http://www.keil.com/pack/ARM.CMSIS.5.0.1.pack" target="_blank">www.keil.com/pack/ARM.CMSIS.5.0.1.pack</a> and \n
  <a href="http://www.keil.com/pack/ARM.CMSIS.5.0.0.pack" target="_blank">www.keil.com/pack/ARM.CMSIS.5.0.0.pack</a> and ... \n
  At the specified location, you need to have one (unversioned) PDSC file and can have multiple versioned Pack files,
  but at least the latest one.
- If the URL or the PDSC/Pack files become unavailable (temporarily or permanently), users will not be able to retrieve
  updates.
- Do not replace PDSC/Pack files without updating the version number because the Pack management tools will not recognize
  the update unless the version has been changed.
- Older packs should remain available.


\section cp_KeilComPack Publishing using Arm's Pack Index Service

Arm maintains a list of available software packs. If you wish to add your packs to that list, send either your vendor.pidx
file or your PDSC file to the following email address: <a href="mailto:CMSIS@arm.com">CMSIS@arm.com</a>. The PIDX file will
be processed and all referenced PDSC files will be validated. The following content will be processed in order to generate
the web site
(<a href="https://developer.arm.com/embedded/cmsis/cmsis-packs">https://developer.arm.com/embedded/cmsis/cmsis-packs</a>):
- Version
- Release Notes
- Devices
- Boards
- Examples
- Software Components

Please allow up to seven working days for the process. If the files contain any errors, you will be notified. Otherwise, the
information is added to the index server.

\section cp_PackRehosting Moving a pack from one URL to another

Sometimes, it is necessary to rehost a pack. This implies that you need to change the \<url\> element in the PDSC file. To
ensure that the pack is found by the indexer of the keil.com server, follow this procedure:
- Create a new version of the pack: update the PDSC file with the new URL ("url_B") and make sure to increment the version
- Place a copy of this latest PDSC at url_B and url_A (the original URL).
- Place a copy of the new pack in url_B (only)
- Copy all packs from url_A to url_B
- Inform Arm about the new URL by either
  - updating the \<vendor\>.pidx with url_B for this pack \em or
  - sending a link to the PDSC file via email if your company does not maintain a \<vendor\>.pidx

\note
- PDSC and pack versions need to be accessible from the same new URL
- You must keep url_A alive as is. But there is no need to maintain/update url_A going forward otherwise users with an old
  PDSC file will no longer find the pack versions.
*/
