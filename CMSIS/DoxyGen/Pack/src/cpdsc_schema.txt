/**
\page cpdsc_pg Project Description (*.CPDSC) Format  (new)

The purpose of this file format is the environment/tool independant definition of a software
project. Environment specific project formats shall be derived from this description in a one time
creation step. The CPDSC file is considered static and there is no expectation to keep the projects
synchronized.
\note The generator (*.GPDSC) constructs share be used for synchronizing updated software components
driven by code generators.

The scope of the project description includes:
- CMSIS run time ennvironment configuration (RTE)
- Project build including linker script generation
- Flash programming
- Basic configuration of the debug adapter

The project format only creates a basic project configuration and does not reflect tool specific
features and configuration options. 

The import and conversion from the CPDSC format into a toolchain specific format is the 
responsibility of the tool vendor ensuring that updates and changes in the tool specific project
format will be managed appropriately.

\section cpdsc_definition Definition of CMSIS project
A CMSIS software project is a collection of files in a directory structure described by a CPDSC file.
The CPDSC file is located in the base folder of the directory structure. There is only one 
CPDSC file contained in the project directory structure. A CPDSC file contains one or more
related project descriptions.
<p>&nbsp;</p>		
<hr>

\anchor cpdsc_create_section
\b Example CMSIS Project Description File (*.CPDSC):
\code
<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <name>STM32F429_Flash</name>
  <description>CMSIS RTOS Blinky for STM32F429</description>
  <url>www.keil.com/pack/Keil.STM32F4xx_DFP.pdsc</url>
  
  <releases>
    <release version="5.20.0.2">Generated 2016-05-10T22:08:37</release>
  </releases>

  <requirements>
    <packages>
      <package name="STM32F4xx_DFP" vendor="Keil" version="2.8.0:2.8.0"/>
      <package name="CMSIS" vendor="ARM" version="4.5.0:4.5.0"/>
    </packages>
  </requirements>

  <create>
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        <output debug="1" name="Blinky" type="exe"/>
        <debugProbe coreClock="10000000" name="ST-Link" protocol="swd"/>
        <memory access="rx" default="1" name="IROM1" size="0x200000" start="0x8000000" startup="1"/>
        <memory access="rw" default="1" init="1" name="IRAM1" size="0x30000" start="0x20000000"/>
        <memory access="rw" default="0" init="1" name="IRAM2" size="0x10000" start="0x10000000"/>
      </target>
      <select>
        <component Cclass="CMSIS" Cgroup="CORE" Cvendor="ARM" Cversion="4.1.0"/>
        <component Cclass="CMSIS" Cgroup="RTOS" Csub="Keil RTX" Cvendor="ARM" Cversion="4.78.0">
          <file attr="config" category="source" name="CMSIS/RTOS/RTX/Templates/RTX_Conf_CM.c" version="4.70.1"/>
        </component>
        <component Cbundle="STM32F429I-Discovery" Cclass="Board Support" Cgroup="Buttons" Cvendor="Keil" Cversion="1.0.0"/>
        <component Cbundle="STM32F429I-Discovery" Cclass="Board Support" Cgroup="LED" Cvendor="Keil" Cversion="1.0.0"/>
        <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cvendor="Keil" Cversion="1.4.0">
          <file attr="config" category="header" name="CMSIS/Driver/Config/RTE_Device.h" version="2.3.1"/>
          <file attr="config" category="header" name="MDK/Templates/Inc/stm32f4xx_hal_conf.h" version="1.4.2"/>
        </component>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="Startup" Cvendor="Keil" Cversion="2.4.0">
          <file attr="config" category="source" condition="STM32F429xx_ARMCC" name="Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/arm/startup_stm32f429xx.s" version="2.4.2"/>
          <file attr="config" category="source" name="Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/system_stm32f4xx.c" version="2.4.2"/>
        </component>
      </select>
      <files>
        <group name="Source Files">
          <file category="sourceC" name="./Blinky.c"/>
          <file category="sourceC" name="./Thread_LED.c"/>
        </group>
        <group name="Documentation">
          <file category="doc" name="./Abstract.txt"/>
        </group>
      </files>
    </project>
  </create>

</package>
\endcode


\section element_cpdsc_structure Top level structure of the CMSIS project description
The CPDSC file format shares the schema file (PACK.xsd) with PDSC and GPDSC, however a CPDSC file 
can only contain the following top level elements:

- \ref element_package "\<vendor>" [required]: creator of the project and/or CMSIS project description
- \ref element_package "\<name>" [required]: name of the example project which shall match the name
                                             of this file
- \ref element_package "\<description>" [required]: high level summary of the CMSIS Project
- \ref element_releases "\<releases>" [required]: release notes history of the example project.
   The attributes <em>deprecated</em> and <em>replacement</em> are not supported in the context of
   CPDSC files.
- \ref element_package "\<url>" [required]: file origin in case of generated CMSIS projects or url
  of the pack it is contained in or repository link for the file.
- \ref element_package "\<supportContact>" [optional]: may provide an email address or web page URL 
       for reporting project specific questions and problems
- \ref element_package "\<license>" [optional]: path to a license document, relative to cpdsc file.
       Users are urged to review the terms and conditions of an example prior to using it.
- \ref element_requirements "<requirements>" specifies required packs, compiler and
        programming languages
- \subpage cpdsc_create_pg "\<create>" contains the project details
<p>&nbsp;</p>		
<hr>


\b /CPDSC package
<table class="cmtable" summary="Element: package">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>root</td>
    <td colspan="3">description root point</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>schemaVersion</td>
    <td>version of PACK.xsd the description is compatible with</td>
    <td>VersionType</td>
    <td>required</td>  
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>name</td>
    <td>file name of the CPDSC file</td>
    <td>RestrictedString</td>
    <td><1></td>
  </tr>
  <tr>
    <td>vendor</td>
    <td>creator/owner of the CPDSC file</td>
    <td>RestrictedString</td>
    <td><1></td>
  </tr>
  <tr>
    <td>description</td>
    <td>high level description of the project(s)</td>
    <td>xs:string</td>
    <td><1></td>
  </tr>
  <tr>
    <td>url</td>
    <td>file location if generated, link to the PACK this file belongs to</td>
    <td>xs:anyURI</td>
    <td><1></td>
  </tr>
  <tr>
    <td>supportContact</td>
    <td>email or web page for reporting errors or problems related to this project</td>
    <td>xs:string</td>
    <td><0..1></td>
  </tr>
  <tr>
    <td>license</td>
    <td>reference to a license file relative to this CPDSC</td>
    <td>xs:string</td>
    <td><0..1></td>
  </tr>
  <tr>
    <td>\ref element_releases "releases"</td>
    <td>release history and release notes for tracking changes to this project</td>
    <td>\ref element_releases "ReleasesType"</td>
    <td><1></td>
  </tr>
  <tr>
    <td>\ref element_requirements "requirements"</td>
    <td>specifies required packs, compiler and programming languages for the project</td>
    <td>\ref element_requirements "RequirementsType"</td>
    <td><1></td>
  </tr>
  <tr>
    <td>\ref element_create "create"</td>
    <td>section capturing the project configuration</td>
    <td>\ref element_create "CreateType"</td>
    <td><1></td>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>

*/
 

/** 
\page cpdsc_create_pg /package/create
\anchor element_create

The create element contains one or more project sections. The expectation is that the different
projects are related, e.g. being the secure and non-secure part of an application, or a set of
library projects and the final application project.

\section element_project /package/create/project
The \<project> section: bundles a project within the create section and consists of three sections:

- \subpage cpdsc_target_pg "\<target>" section: specifying the device, memory, algorithms and debug adapter
- \subpage cpdsc_select_pg "\<select>" section: specifying the RTE configuration and required configuration files
- \subpage cpdsc_files_pg "\<files>" section: specifying source modules for the application which are not 
                                     included as components

\b Example <em>project</em> section:
\code
<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd">
  ...
  <create>
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        ...
      </target>
      <select>
        ...
      </select>
      <files>
        ...
      </files>
    </project>
  </create>
</package>
\endcode
                                   
\b /project
<table class="cmtable" summary="Element: project">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_create "create"</td>
    <td colspan="3">\ref element_create "CreateType"</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>name of the project. Will be used as file name as well. If not specified the name on the 
    package level is used.</td>
    <td>RestrictedString</td>
    <td>optional</td>  
  </tr>
  <tr>
    <td>documentation</td>
    <td>file path and name of a document relative to CPDSC file or url providing detailed information
    about the software project</td>
    <td>xs:string</td>
    <td>optional</td>  
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_target "target"</td>
    <td>section containing details about the board, device, memory, debug, algorithms, etc.</td>
    <td>\ref element_target "TargetType"</td>
    <td><1></td>
  </tr>
  <tr>
    <td>\ref element_select "select"</td>
    <td>section specifying the selected software components use for the run time configuration environment</td>
    <td>\ref element_select "SelectType"</td>
    <td><0..1></td>
  </tr>
  <tr>
    <td>\ref element_project_files "files"</td>
    <td>section listing all files used for the project build which are not configured using components</td>
    <td>\ref element_project_files "ProjectFilesType"</td>
    <td><0..1></td>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>

*/

/** 
\page cpdsc_target_pg /package/create/project/target
\anchor element_target

\b Example <em>target</em> section:

\code
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd"/>
  ...
  <create>
    <project>
      ...
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        <output debug="1" name="Blinky" type="exe"/>
        <debugProbe coreClock="10000000" name="ST-Link" protocol="swd"/>
        <memory access="rx" default="1" name="IROM1" size="0x200000" start="0x8000000" startup="1"/>
        <memory access="rw" default="1" init="1" name="IRAM1" size="0x30000" start="0x20000000"/>
        <memory access="rw" default="0" init="1" name="IRAM2" size="0x10000" start="0x10000000"/>
      </target>
      ...
    </project>
  </create>
</package>
\endcode

\b /target
<table class="cmtable" summary="Element: target">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_project "project"</td>
    <td colspan="3">\ref element_project</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>Bvendor</td>
    <td>Board vendor name. Either a board vendor and board name with optional board revision 
    are specified or a device vendor and a device name</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Bname</td>
    <td>Board name. Either a board vendor and board name with optional board revision 
    are specified or a device vendor and a device name</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
    <tr>
    <td>Bversion/td>
    <td>Board version. Either a board vendor and board name with optional board revision 
    are specified or a device vendor and a device name</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dvendor</td>
    <td>Device vendor name. Either a board vendor and board name with optional board revision 
    are specified or a device vendor and a device name</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dname</td>
    <td>Device name. Either a board vendor and board name with optional board revision 
    are specified or a device vendor and a device name</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>Pname</td>
    <td>Processor instance name. In case of multi-processor devices this processor ID is required.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dfpu</td>
    <td>Selects the floating point unit option that is active for the project. Note: even if the
    device implements an FPU setting Dfpu=0 here, will disable FPU code generation.</td>
    <td>\ref DfpuEnum "DfpuEnum"</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dmpu</td>
    <td>Selects the memory protection unit to be enabled or disabled for the project.</td>
    <td>\ref DmpuEnum "DmpuEnum"</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dendian</td>
    <td>Selects the endianess to be used for the project. Note that selecting an endianess that is
    not supported by the device, will result in a build that will not run on the device.</td>
    <td>\ref DendianEnum "DendianEnum"</td>
    <td>optional</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_output "output"</td>
    <td>configures the build output name, type and whether or not to include debug information</td>
    <td>\ref element_output "OutputType"</td>
    <td>1</td>
  </tr>
  <tr>
    <td>stack</td>
    <td>specifies the stack size in bytes allocated by the linker for the application setting the attribute size</td>
    <td>StackType</td>
    <td>1</td>
  </tr>
  <tr>
    <td>heap</td>
    <td>specifies the heap size in bytes allocated by the linker for the application setting the attribute size</td>
    <td>HeapType</td>
    <td>1</td>
  </tr>
  <tr>
    <td>\ref element_target_memory "memory"</td>
    <td>specifies the memory configuration to be used for this application. Based on the memories, the
    linker script will be generated by the toolchain</td>
    <td>\ref element_target_memory "TargetMemoryType"</td>
    <td>0..*</td>
  </tr>
  <tr>
    <td>\ref element_target_algorithm "algorithm"</td>
    <td>selects from the list of available flash programming algorithms specified for this device
    in the corresponding Device Family Pack. Target and RAM memory ranges can be reconfigured from
    the defaults specified in the device description. </td>
    <td>\ref element_target_algorithm "TargetAlgorithmType"</td>
    <td>0..*</td>
  </tr>
  <tr>
    <td>\ref element_debugProbe "debugProbe"</td>
    <td>selects and configures the debug probe to be used for this project.</td>
    <td>\ref element_debugProbe "DebugProbeType"</td>
    <td>0..*</td>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>

\section element_target_algorithm /package/create/project/target/algorithm

\b Example <em>algorithm</em> element
\code
  ...
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
      ...
      <algorithm  name="CMSIS/Flash/STM32F4xx_1024.FLM" start="0x08000000"  size="0x100000" RAMstart=0x20000000 RAMsize=0x1000/>
      ...
      </target>
    </project>
  ...
\endcode


\b /algorithm
<table class="cmtable" summary="Element: algorithm">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_target "target"</td>
    <td colspan="3">\ref element_target</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>references the name (without path) of the flash programming algorithm as defined by the DFP/td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>start</td>
    <td>overrides the predefined programming start address of the flash programming algorithm as
    specified in the DFP</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>size</td>
    <td>overrides the predefined programming size of the flash programming algorithm as
    specified in the DFP</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>RAMstart</td>
    <td>overrides the predefined start address in RAM where the flash programming algorithm is
    loaded into as specified in the DFP</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>RAMsize</td>
    <td>overrides the predefined size in RAM where the flash programming algorithm is loaded into as
    specified in the DFP</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>remove</td>
    <td>disables a flash programming algorithm that is specified as default algorith by the DFP</td>
    <td>xs:boolean</td>
    <td>optional</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>

\section element_debugProbe /package/create/project/target/debugProbe

\b Example <em>debugProbe</em> element
\code
  ...
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        ...
        <debugProbe coreClock="10000000" name="ST-Link" protocol="swd"/>
        ...
      </target>
    </project>
  ...
\endcode

\b /debugProbe
<table class="cmtable" summary="Element: debugProbe">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_target "target"</td>
    <td colspan="3">\ref element_target</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>name of of the debugProbe (e.g. "JLink", "ULink2", "ULinkPro", "CMSIS-DAP", "ST-Link")/td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>protocol</td>
    <td>select the debug protocol to be configure (e.g. "jtag", "swd", "cjtag")</td>
    <td>\ref DebugProtocolEnum "DebugProtocolEnum"</td>
    <td>required</td>
  </tr>
  <tr>
    <td>coreClock</td>
    <td>clock frequency of the core once the system is initialized</td>
    <td>NonNegativeInteger</td>
    <td>required</td>
  </tr>
  <tr>
    <td>tpiuClock</td>
    <td>clock frequency of the TPIU block of the CoreSight debug logic. Only relevant when tracing</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
</table>


<p>&nbsp;</p>		
<hr>

\section element_target_memory /package/create/project/target/memory

\b Example <em>memory</em> element
\code
  ...
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
      ...
        <memory access="rx" default="1" name="IROM1" size="0x200000" start="0x8000000" startup="1"/>
        <memory access="rw" default="1" init="1" name="IRAM1" size="0x30000" start="0x20000000"/>
        <memory access="rw" default="0" init="1" name="IRAM2" size="0x10000" start="0x10000000"/>
       ...
      </target>
    </project>
  ...
\endcode


\b /memory
<table class="cmtable" summary="Element: memory">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_target "target"</td>
    <td colspan="3">\ref element_target</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>reference to the name of the memory as defined by the DFP/td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>start</td>
    <td>overrides the predefined memory start address</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>size</td>
    <td>overrides the predefined memory size</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>access</td>
    <td>overrides the predefined access permissions for the memory as specified in the DFP</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>remove</td>
    <td>removes the memory specified in the DFP</td>
    <td>xs:boolean</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>init</td>
    <td>overrides the predefined init flag as specfied in the DFP. Use for RAM only (access="rw")</td>
    <td>xs:boolean</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>default</td>
    <td>overrides the predefined default tag as specfied in the DFP. Use to define the default
    memory for the linker</td>
    <td>xs:boolean</td>
    <td>optional</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>



\section element_output /package/create/project/target/output

\b Example <em>output</em> element
\code
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        <output debug="1" name="Blinky" type="exe"/>
        ...
      </target>
      ...
    </project>
\endcode

\b /output
<table class="cmtable" summary="Element: output">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_target "target"</td>
    <td colspan="3">\ref element_target</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>name of the build target output file</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>type</td>
    <td>select the build target to be "lib" = library ir "exe" = executable</td>
    <td>CompilerOutputType</td>
    <td>required</td>
  </tr>
  <tr>
    <td>debug</td>
    <td>select whether the output will contain debug information or not</td>
    <td>xs:boolean</td>
    <td>required</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>


*/

/** 
\page cpdsc_select_pg /package/create/project/select
\anchor element_select

In this section all components are listed that are selected within the runtime configuration manager
and the contained files are therefore part of the project.

\b Example <em>select</em> section:
\code
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd"/>
  ...
  <create>
    <project>
      ...
      <select>
        <component Cclass="CMSIS" Cgroup="CORE" Cvendor="ARM" Cversion="4.1.0"/>
        <component Cclass="CMSIS" Cgroup="RTOS" Csub="Keil RTX" Cvendor="ARM" Cversion="4.78.0">
          <file attr="config" category="source" name="CMSIS/RTOS/RTX/Templates/RTX_Conf_CM.c" version="4.70.1"/>
        </component>
        <component Cbundle="STM32F429I-Discovery" Cclass="Board Support" Cgroup="Buttons" Cvendor="Keil" Cversion="1.0.0"/>
        <component Cbundle="STM32F429I-Discovery" Cclass="Board Support" Cgroup="LED" Cvendor="Keil" Cversion="1.0.0"/>
        <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cvendor="Keil" Cversion="1.4.0">
          <file attr="config" category="header" name="CMSIS/Driver/Config/RTE_Device.h" version="2.3.1"/>
          <file attr="config" category="header" name="MDK/Templates/Inc/stm32f4xx_hal_conf.h" version="1.4.2"/>
        </component>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="Startup" Cvendor="Keil" Cversion="2.4.0">
          <file attr="config" category="source" condition="STM32F429xx_ARMCC" name="Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/arm/startup_stm32f429xx.s" version="2.4.2"/>
          <file attr="config" category="source" name="Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/system_stm32f4xx.c" version="2.4.2"/>
        </component>
      </select>
      ...
    </project>
  </create>
</package>
\endcode

\b /select
<table class="cmtable" summary="Element: select">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_project "project"</td>
    <td colspan="3">\ref element_project</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
    <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_project_component "component"</td>
    <td>specification of a selected component used for project configuration using CMSIS Software component taxonomy</td>
    <td>\ref element_project_component "ComponentSelectType"</td>
    <td>0..*</td>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>


\section element_project_component /package/create/project/select/component

\b Example <em>component</em> element
\code
...
      <select>
        <component Cclass="CMSIS" Cgroup="CORE" Cvendor="ARM" Cversion="4.1.0"/>
        <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cvendor="Keil" Cversion="1.4.0">
          <file attr="config" category="header" name="CMSIS/Driver/Config/RTE_Device.h" version="2.3.1"/>
          <file attr="config" category="header" name="MDK/Templates/Inc/stm32f4xx_hal_conf.h" version="1.4.2"/>
        </component>
      </select>
...
\endcode

\b /component
<table class="cmtable" summary="Element: component">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_select "select"</td>
    <td colspan="3">\ref element_select</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>Cvendor</td>
    <td>vendor of the component</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>Cbundle</td>
    <td>name of bundle the selected component belongs to</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
    <tr>
    <td>Cvariant</td>
    <td>name of the variant of the selected component</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>Cclass</td>
    <td>component class name following the taxonomy</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>Cgroup</td>
    <td>component group name following the taxonomy</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>Csub</td>
    <td>component sub group name following the taxonomy (string may be empty)</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>Cversion</td>
    <td>version of the selected component. Note that a higher version number can be chosen in case 
        the matching version is not available</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>Capiversion</td>
    <td>implemented api version defined for the corresponding Cclass:Cgroup:Csub. Only use for 
        components that have an \<api> associated </td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>instances</td>
    <td>number of instances that need to be created of the selectedcomponent. This is only set for
        components that are multi-instance capable. Defaults to 1 if not set</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_component_file "file"</td>
    <td>specification of configuration files from the selected component. These files are
    required to be included in the project folder structure already and are expected to contain
    a configuration setup specifically for the project.</td>
    <td>\ref element_component_file "ComponentSelectType"</td>
    <td>0..*</td>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>

\section element_component_file /package/create/project/select/component/file

\b Example <em>file</em> element
\code
  ...
        <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cvendor="Keil" Cversion="1.4.0">
          <file attr="config" category="header" name="CMSIS/Driver/Config/RTE_Device.h" version="2.3.1"/>
          <file attr="config" category="header" name="MDK/Templates/Inc/stm32f4xx_hal_conf.h" version="1.4.2"/>
        </component>
  ...
\endcode

\b component/file
<table class="cmtable" summary="Element: file">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref  element_project_component "component"</td>
    <td colspan="3">\ref element_project_component "ComponentSelectType"</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>file path and name within pack it originates from</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>version</td>
    <td>version of the configuration file being used in example</td>
    <td>\ref VersionType "VersionType"</td>
    <td>required</td>
  </tr>
    <tr>
    <td>attr</td>
    <td>file action attribute (i.e. config, copy)</td>
    <td>\ref FileAttributeEnum "FileAttributeType"</td>
    <td>required</td>
  </tr>
  <tr>
    <td>category</td>
    <td>file type (i.e. sourceC, sourceCPP, sourceAsm, header</td>)
    <td>\ref FileCategoryEnum "FileCategoryType"</td>
    <td>required</td>
  </tr>
  <tr>
    <td>condition</td>
    <td>condition id being used at the time of runtime configuration.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
</table>


<p>&nbsp;</p>		
<hr>

*/

/** 
\page cpdsc_files_pg /package/create/project/files
\anchor element_files
The files section specifies files to be included into the project build that are not managed through
software components. Files can be sorted into named groups.

\b Example <em>files</em> section:
\code
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd"/>
  ...
  <create>
    <project>
      <files>
        <group name="Source Files">
          <file category="sourceC" name="./Blinky.c"/>
          <file category="sourceC" name="./Thread_LED.c"/>
        </group>
        <group name="Documentation">
          <file category="doc" name="./Abstract.txt"/>
        </group>
      </files>
    </project>
  </create>
</package>
\endcode

\anchor element_project_files
\b /files
<table class="cmtable" summary="Element: files">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_project "project"</td>
    <td colspan="3">\ref element_project</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
    <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_project_file "file"</td>
    <td>specification of a file.</td>
    <td>\ref element_project_file "ProjectFileType"</td>
    <td>0..*</td>
  </tr>
  <tr>
    <td>\ref element_project_group "group"</td>
    <td>specification of a group of files</td>
    <td>\ref element_project_group "GroupType"</td>
    <td>0..*</td>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>

\section element_project_file /package/project/create/files/.../file
\b /file
<table class="cmtable" summary="Element: file">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_files "files"</td>
    <td colspan="3">\ref element_files</td>
  </tr>
  <tr>
    <td>\ref element_project_group "group"</td>
    <td colspan="3">\ref element_project_group</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>path and name of file relative to CPDSC location</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>\ref FileCategoryEnum "category"</td>
    <td>type of file (e.g. whether a c or assembler file)</td>
    <td>\ref FileCategoryEnum "FileCategoryType"</td>
    <td>required</td>
  </tr>
  <tr>
    <td>src</td>
    <td>folder specifying the source code location for a library</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
</table>
<p>&nbsp;</p>		
<hr>


\section element_project_group /package/create/project/files/.../group

\note The nesting of groups is supported. It is tool dependant how grouping is represented in the
tool since the grouping of files has no impact on the build by default.

\b Example <em>files</em> section:
\code
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd"/>
  ...
  <create>
    <project>
      <files>
        <group name="Source">
          <group name="C">
            <file category="sourceC" name="./Blinky.c"/>
            <file category="sourceC" name="./Thread_LED.c"/>
          </group>
          <group name="ASM">
            <file category="sourceAsm" name="./startup_add.s"/>
          </group>
        </group>
        <group name="Documentation">
          <file category="doc" name="./Abstract.txt"/>
        </group>
      </files>
    </project>
  </create>
</package>
\endcode

\b /group
<table class="cmtable" summary="Element: group">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_files "files"</td>
    <td colspan="3">\ref element_files</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>name of the group of files</td>
    <td>RestrictedString</td>
    <td>required</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_project_file "file"</td>
    <td>specification of a file.</td>
    <td>\ref element_project_file "ProjectFileType"</td>
    <td>0..*</td>
  </tr>
  <tr>
    <td>\ref element_project_group "group"</td>
    <td>specification of a group of files</td>
    <td>\ref element_project_group "GroupType"</td>
    <td>0..*</td>
  </tr>
</table>

<p>&nbsp;</p>		
<hr>

<hr>

*/
