/**************************************************************************************************/
/** 
\mainpage Introduction

The <b>Cortex Microcontroller Software Interface Standard</b> (CMSIS) is a vendor-independent 
hardware abstraction layer for the Cortex&reg;-M processor series and defines generic tool
interfaces.  The CMSIS enables consistent device support and 
simple software interfaces to the processor and the peripherals, simplifying software re-use, 
reducing the learning curve for microcontroller developers, and reducing the time to market for new devices. 
    
The CMSIS is defined in close cooperation with various silicon and software vendors and 
provides a common approach to interface to peripherals, real-time operating systems, 
and middleware components. The CMSIS is intended to enable the combination of software components 
from multiple middleware vendors. 

CMSIS Version 5 supports also the <a class="el" href="http://www.arm.com/products/processors/instruction-set-architectures/armv8-m-architecture.php" target="_blank">Armv8-M architecture</a> 
including <a class="el" href="http://www.arm.com/products/processors/technologies/trustzone/index.php" target="_blank">TrustZone&reg; for Armv8-M</a> hardware security extensions and the
<a class="el" href="http://www.arm.com/products/processors/cortex-m/cortex-m23-processor.php" target="_blank">Cortex-M23</a> and <a class="el" href="http://www.arm.com/products/processors/cortex-m/cortex-m33-processor.php" target="_blank">Cortex-M33</a> processors.

\anchor CM_Components
The CMSIS components are:
 - <a href="../../Core/html/index.html"><b>CMSIS-Core (Cortex-M)</b></a>: API for the Cortex-M processor core and peripherals. 
   It provides a standardized interface for Cortex-M0, Cortex-M0+, Cortex-M3, Cortex-M4, Cortex-M7, Cortex-M23, Cortex-M33, Cortex-M35P, SC000, and SC300. 
   Also included are SIMD intrinsic functions for Cortex-M4, Cortex-M7, Cortex-M33 and Cortex-M35P SIMD instructions.

 - <a href="../../Core_A/html/index.html"><b>CMSIS-Core (Cortex-A)</b></a>: API and basic run-time system for the Cortex-A5/A7/A9 processor core and peripherals. 
   
 - <a href="../../Driver/html/index.html"><b>CMSIS-Driver</b></a>: defines generic peripheral driver interfaces for middleware making it reusable across supported devices. The API is RTOS independent
    and connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces.

 - <a href="../../DSP/html/index.html"><b>CMSIS-DSP</b></a>: DSP Library Collection with over 60 Functions for various data types: fixed-point (fractional q7, q15, q31) and single precision floating-point (32-bit).
   The library is available for all Cortex-M cores. Implementations that are optimized for the SIMD instruction set are available for Cortex-M4, Cortex-M7, Cortex-M33 and Cortex-M35P.
   
 - <a href="../../NN/html/index.html"><b>CMSIS-NN</b></a>: CMSIS-NN is a collection of efficient neural network kernels developed to maximize the performance and minimize the memory footprint of neural networks on Cortex-M processor cores.
 
 - <a href="../../RTOS/html/index.html"><b>CMSIS-RTOS v1</b></a>: Common API for Real-Time Operating Systems along with reference implementation based on RTX.
    It provides a standardized programming interface that is portable to many RTOS and enables software components that can work across multiple RTOS systems.
 
 - <a href="../../RTOS2/html/index.html"><b>CMSIS-RTOS v2</b></a>: extends CMSIS-RTOS v1 with support for Armv8-M architecture, dynamic object creation,
    provisions for multi-core systems, and binary compatible interface across ABI compliant compilers.

 - <a href="../../Pack/html/index.html"><b>CMSIS-Pack</b></a>: describes with an XML-based package description (PDSC) file the user and device relevant parts of a file collection (called a software pack) that includes source, header and library files, documentation, 
    Flash programming algorithms, source code templates, and example projects. Development tools and web infrastructures use the PDSC file to extract device parameters, 
    software components, and evaluation board configurations.

 - <a href="../../SVD/html/index.html"><b>CMSIS-SVD</b></a>: System View Description for Peripherals. Describes the peripherals of a device in an XML file and can be used to create peripheral awareness in 
    debuggers or header files with peripheral register and interrupt definitions.

 - <a href="../../DAP/html/index.html"><b>CMSIS-DAP</b></a>: Debug Access Port. Standardized firmware for a Debug Unit that connects to the CoreSight Debug Access Port. CMSIS-DAP is distributed as a separate package and is
    well suited for integration on evaluation boards. This component is provided as separate download.
	
 - <a href="../../Zone/html/index.html"><b>CMSIS-Zone</b></a>: System resource definition and partitioning. Defines methods to describe system resources and to partition 
   these resources into multiple projects and execution areas.

\note Refer to \ref CM_Pack_Content for more information on the content of the Software Pack.

\image html Overview.png "CMSIS Structure"
        
\section Motivation Motivation

CMSIS has been created to help the industry in standardization. It enables consistent software layers and device support across a wide range of development tools and microcontrollers.
CMSIS is not a huge software layer that introduces overhead and does not define standard peripherals. The silicon industry can
therefore support the wide variations of Cortex-M processor-based devices with this common standard.

In detail the benefits of the CMSIS are:

 - Overall CMSIS reduces the learning curve, development costs, and time-to-market. Developers can write software quicker through a variety of easy-to-use, standardized software interfaces.
 - Consistent software interfaces improve the software portability and re-usability. Generic software libraries and interfaces provide consistent software framework.
 - Provides interfaces for debug connectivity, debug peripheral views, software delivery, and device support to reduce time-to-market for new microcontroller deployment.
 - Provides a compiler independent layer that allows using different compilers. CMSIS is supported by mainstream compilers.
 - Enhances program debugging with peripheral information for debuggers and ITM channels for printf-style output and RTOS kernel awareness. 
 - CMSIS is delivered in CMSIS-Pack format which enables fast software delivery, simplifies updates, and enables consistent integration into development tools.
 - CMSIS-Zone will simplify system resource and partitioning as it manages the configuration of multiple processors, memory areas, and peripherals.


\section CodingRules Coding Rules

The CMSIS uses the following essential coding rules and conventions:
 - Compliant with ANSI C (C99) and C++ (C++03).
 - Uses ANSI C standard data types defined in \b <stdint.h>.
 - Variables and parameters have a complete data type.
 - Expressions for \em \#define constants are enclosed in parenthesis.
 - Conforms to MISRA 2012 (but does not claim MISRA compliance). MISRA rule violations are documented.
          
In addition, the CMSIS recommends the following conventions for identifiers:
 - \b CAPITAL names to identify Core Registers, Peripheral Registers, and CPU Instructions.
 - \b CamelCase names to identify function names and interrupt functions.
 - \b Namespace_ prefixes avoid clashes with user identifiers and provide functional groups (i.e. for peripherals, RTOS, or DSP Library).

The CMSIS is documented within the source files with:
 \li Comments that use the C or C++ style. 
 \li Doxygen compliant <b>function comments</b> that provide:
    - brief function overview.
    - detailed description of the function.
    - detailed parameter explanation.
    - detailed information about return values.

Doxygen	comment example:
\verbatim
/** 
 * @brief  Enable Interrupt in NVIC Interrupt Controller
 * @param  IRQn  interrupt number that specifies the interrupt
 * @return none.
 * Enable the specified interrupt in the NVIC Interrupt Controller.
 * Other settings of the interrupt such as priority are not affected.
 */
\endverbatim


\section Validation Validation

The various components of CMSIS Version 5 are validated using mainstream compilers.  To get a diverse coverage,
Arm uses the Arm Compiler v5 (based on EDG front-end), the Arm Compiler v6 (based on LLVM front-end), and the
GCC Compiler in the various tests. For each component, the section \b "Validation" describes the scope of the 
various verifications. 

CMSIS components are compatible with a range of C and C++ language standards. The CMSIS components comply with 
the <a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ihi0036b/index.html">Application Binary 
Interface (ABI) for the Arm Architecture</a> (exception CMSIS-RTOS v1). This ensures C API interfaces that support 
inter-operation between various toolchains.

As CMSIS defines API interfaces and functions that scale to a wide range of processors and devices, the scope of 
the run-time test coverage is limited. However, several components are validated using dedicated test suites.

The CMSIS source code is checked for MISRA C:2012 conformance using PC-Lint. MISRA deviations are documented with
reasonable effort, however Arm does not claim MISRA compliance as there is today for example no guideline enforcement 
plan. The CMSIS source code is not checked for MISRA C++:2008 conformance as there is a risk that it is incompatible 
with C language standards, specifically warnings that may be generated by the various C compilers.


\section License License

The CMSIS is provided free of charge by Arm under Apache 2.0 license. 
View the <a href="LICENSE.txt">Apache 2.0 License</a>.


\section CM_Pack_Content ARM::CMSIS Pack

The <b>ARM::CMSIS</b> Pack contains the following:

File/Directory    |Content                                                                           
:-----------------|:---------------------------------------------------------------------------------
\b ARM.CMSIS.pdsc |Package description file in CMSIS-Pack format.                                                         
\b LICENSE.txt    |CMSIS License Agreement (Apache 2.0)
\b CMSIS          |\ref CM_Components "CMSIS components" (see below)                                 
\b Device         |CMSIS reference implementations of Arm Cortex-M processor based devices                                 

CMSIS Directory
---------------

Directory                 |Content                                                                                                                                  
:-------------------------|:----------------------------------------------------------------------------------------------------------------------------------------
\b Documentation          |This documentation                                                                                                                       
\b Core                   |User code templates for <a href="../../Core/html/index.html"><b>CMSIS-Core (Cortex-M)</b></a> related files, referenced in ARM.CMSIS.pdsc
\b Core_A                 |User code templates for <a href="../../Core_A/html/index.html"><b>CMSIS-Core (Cortex-A)</b></a> related files, referenced in ARM.CMSIS.pdsc
\b DAP                    |<a href="../../DAP/html/index.html"><b>CMSIS-DAP</b></a> Debug Access Port source code and reference implementations                     
\b Driver                 |Header files for the <a href="../../Driver/html/index.html"><b>CMSIS-Driver</b></a> peripheral interface API                             
\b DSP_Lib                |<a href="../../DSP/html/index.html"><b>CMSIS-DSP</b></a> software library source code                                                    
\b NN                     |<a href="../../NN/html/index.html"><b>CMSIS-NN</b></a> software library source code                                                    
\b Include                |Include files for <a href="../../Core/html/index.html"><b>CMSIS-Core (Cortex-M)</b></a> and <a href="../../DSP/html/index.html"><b>CMSIS-DSP</b></a>
\b Lib                    |<a href="../../DSP/html/index.html"><b>CMSIS-DSP</b></a> generated libraries for ARMCC and GCC                                           
\b Pack                   |<a href="../../Pack/html/pack_Example.html"><b>CMSIS-Pack</b></a> example                                                              
\b RTOS                   |<a href="../../RTOS/html/index.html"><b>CMSIS-RTOS Version 1</b></a> along with RTX reference implementation                       
\b RTOS2                  |<a href="../../RTOS/html/index.html"><b>CMSIS-RTOS Version 2</b></a> along with RTX reference implementation                           
\b SVD                    |<a href="../../SVD/html/index.html"><b>CMSIS-SVD</b></a> example                                                                         
\b Utilities              |PACK.xsd (<a href="../../Pack/html/pack_Example.html"><b>CMSIS-Pack</b></a> schema file), PackChk.exe (checking tool for software packs), \n CMSIS-SVD.xsd (<a href="../../SVD/html/index.html"><b>CMSIS-SVD</b></a> schema file), SVDConv.exe (conversion tool for SVD files)

<hr>
*/

/*=======0=========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1====*/
/**
\page cm_revisionHistory Revision History 


The following table shows the overall high-level history of the various CMSIS releases.
In addition, each CMSIS component has its own release history:

- <a href="../../Core/html/core_revisionHistory.html"><b>CMSIS-Core (Cortex-M) Revision History</b></a>
- <a href="../../Core_A/html/rev_histCoreA.html"><b>CMSIS-Core (Cortex-A) Revision History</b></a>
- <a href="../../Driver/html/driver_revisionHistory.html"><b>Driver Revision History</b></a>
- <a href="../../DSP/html/ChangeLog_pg.html"><b>DSP Revision History (Change Log)</b></a>
- <a href="../../NN/html/ChangeLog_pg.html"><b>NN Revision History (Change Log)</b></a>
- <a href="../../RTOS/html/rtos_revisionHistory.html"><b>RTOS v1 Revision History</b></a>
- <a href="../../RTOS2/html/rtos_revisionHistory.html"><b>RTOS v2 Revision History</b></a>
- <a href="../../Pack/html/pack_revisionHistory.html"><b>Pack Revision History</b></a>
- <a href="../../SVD/html/svd_revisionHistory.html"><b>SVD Revision History</b></a>
- <a href="../../DAP/html/dap_revisionHistory.html"><b>DAP Revision History</b></a>
- <a href="../../Zone/html/zone_revisionHistory.html"><b>Zone Revision History</b></a>

<table class="cmtable" summary="Revision History">
    <tr>
      <th>Version</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>5.5.0</td>
      <td>
        - CMSIS-Core (Cortex-M) 5.2.0 added Cortex-M35P device support.
      </td>
    </tr>
    <tr>
      <td>5.4.0</td>
      <td>
        - CMSIS-Core (Cortex-M) 5.1.2 Minor fixes and slight enhancements, e.g. beta for Cortex-M1.
        - CMSIS-Core (Cortex-A) 1.1.2 Minor fixes.
        - CMSIS-Driver 2.6.0 (unchanged)
        - CMSIS-DSP 1.5.2 (unchanged)
        - CMSIS-NN 1.1.0 Added new math function (see revision history)
        - CMSIS-RTOS 2.1.3 Relaxed interrupt usage.
          - RTX 5.4.0 (see revision history)
        - CMSIS-Pack 1.5.0 (unchanged)
        - CMSIS-SVD 1.3.3 (unchanged)
        - CMSIS-DAP 2.0.0 (unchanged)
        - CMSIS-Zone 0.0.1 (unchanged)
      </td>
    </tr>
    <tr>
      <td>5.3.0</td>
      <td>
        - CMSIS-Core (Cortex-M) 5.1.1 
        - CMSIS-Core (Cortex-A) 1.1.1 
        - CMSIS-Driver 2.6.0 (unchanged)
        - CMSIS-DSP 1.5.2 (unchanged)
        - CMSIS-NN 1.0.0 Initial contribution of Neural Network Library.
        - CMSIS-RTOS 2.1.2 (unchanged)
        - CMSIS-Pack 1.5.0 (unchanged)
        - CMSIS-SVD 1.3.3 (unchanged)
        - CMSIS-DAP 2.0.0 Communication via WinUSB to achieve high-speed transfer rates.
        - CMSIS-Zone 0.0.1 (unchanged)
      </td>
    </tr>
    <tr>
      <td>5.2.0</td>
      <td>
        - CMSIS-Core (Cortex-M) 5.1.0 MPU functions for ARMv8-M, cmsis_iccarm.h replacing cmsis_iar.h
        - CMSIS-Core (Cortex-A) 1.1.0 cmsis_iccarm.h, additional physical timer access functions
        - CMSIS-Driver 2.6.0 Enhanced CAN and NAND driver interface.
        - CMSIS-DSP 1.5.2 Fixed diagnostics and moved SSAT/USST intrinsics to CMSIS-Core.
        - CMSIS-RTOS 2.1.2 Relaxed some ISR-callable restrictions.
        - CMSIS-Pack 1.5.0 (unchanged)
        - CMSIS-SVD 1.3.3 (unchanged)
        - CMSIS-DAP 1.2.0 (unchanged)
        - CMSIS-Zone 0.0.1 (unchanged)
      </td>
    </tr>
    <tr>
      <td>5.1.1</td>
      <td>
        - CMSIS-Core (Cortex-M) (unchanged)
        - CMSIS-Core (Cortex-A) (unchanged)
        - CMSIS-Driver 2.05 (unchanged)
        - CMSIS-DSP 1.5.2 (unchanged)
        - CMSIS-RTOS 2.1.1 Fixed RTX5 pre-built libraries for Cortex-M.
        - CMSIS-Pack 1.5.0 (unchanged)
        - CMSIS-SVD 1.3.3 (unchanged)
        - CMSIS-DAP 1.1.0 (unchanged)
        - CMSIS-Zone 0.0.1 (unchanged)
      </td>
    </tr>
    <tr>
      <td>5.1.0</td>
      <td>
        - CMSIS-Core (Cortex-M) 5.0.2 several minor corrections and enhancements
        - CMSIS-Core (Cortex-A) 1.0.0 implements a basic run-time system for Cortex-A5/A7/A9
        - CMSIS-Driver 2.05 status typedef made volatile
        - CMSIS-DSP 1.5.2 fixed GNU Compiler specific diagnostics
        - CMSIS-RTOS 2.1.1 added support for Cortex-A5/A7/A9 to RTX5
        - CMSIS-Pack 1.5.0 added SDF format specification
        - CMSIS-SVD 1.3.3 (unchanged)
        - CMSIS-DAP 1.1.0 (unchanged)
        - CMSIS-Zone 0.0.1 (Preview) format to describe system resources and tool for partitioning of resources
      </td>
    </tr>
    <tr>
      <td>5.0.1</td>
      <td>
        - CMSIS-Core 5.0.1 added __PACKED_STRUCT macro and uVisor support
        - CMSIS-Driver 2.05 updated all typedefs related to status now being volatile.
        - CMSIS-DSP 1.5.1 added ARMv8M DSP libraries
        - CMSIS-RTOS 2.1.0 added support for critical and uncritical sections
        - CMSIS-Pack 1.4.8 add Pack Index File specification
        - CMSIS-SVD 1.3.3 (unchanged)
        - CMSIS-DAP 1.1.0 (unchanged)     
      </td>
    </tr>
	<tr>
      <td>5.0.0</td>
      <td>
        Added support for: <a href="http://www.arm.com/products/processors/instruction-set-architectures/armv8-m-architecture.php" target="_blank"><b>ARMv8-M architecture</b></a> including TrustZone for ARMv8-M and Cortex-M23, Cortex-M33 processors
        - CMSIS-Core (Cortex-M) 5.0.0 added support for ARMv8-M and Cortex-M23, Cortex-M33 processors
        - CMSIS-Driver 2.04.0 (unchanged)
        - CMSIS-DSP 1.4.9 minor corrections and performance improvements
        - CMSIS-RTOS 2.0.0 new API with RTX 5.0.0 reference implementation and corrections in RTX 4.8.2
        - CMSIS-Pack 1.4.4 introducing CPDSC project description
        - CMSIS-SVD 1.3.3 several enhancements and rework of documentation
        - CMSIS-DAP 1.1.0 (unchanged)
      </td>
    </tr>
    <tr>
      <td>4.5.0</td>
      <td>
        Maintenance release that is fixing defects. See component's revision history for more details.
        See component's revision history for more details.
        - CMSIS-Core (Cortex-M) 4.30.0
        - CMSIS-DAP 1.1.0 (unchanged)
        - CMSIS-Driver 2.04.0
        - CMSIS-DSP 1.4.7
        - CMSIS-Pack 1.4.1
        - CMSIS-RTOS RTX 4.80.0
        - CMSIS-SVD 1.3.1 
      </td>
    </tr>
    <tr>
      <td>4.4.0</td>
      <td>
        Feature release adding CMSIS-DAP (see extended End User Licence Agreement) and CMSIS-Driver for CAN.
        See component's revision history for more details.
        - CMSIS-Core (Cortex-M) 4.20.0
        - CMSIS-DAP 1.1.0
        - CMSIS-Driver 2.03.0
        - CMSIS-DSP 1.4.5  (unchanged)
        - CMSIS-RTOS RTX 4.79.0
        - CMSIS-Pack 1.4.0
        - CMSIS-SVD 1.3.0
      </td>
    </tr>
    <tr>
      <td>4.3.0</td>
      <td>
        Maintenance release adding SAI CMSIS-Driver and fixing defects. See component's revision history for more details.
        - CMSIS-Core (Cortex-M) 4.10.0
        - CMSIS-Driver 2.02.0
        - CMSIS-DSP 1.4.5
        - CMSIS-RTOS RTX 4.78.0
        - CMSIS-Pack 1.3.3
        - CMSIS-SVD (unchanged)
      </td>
    </tr>
    <tr>
      <td>4.2</td>
      <td>Introducing processor support for Cortex-M7.
      </td>
    </tr>
    <tr>
      <td>4.1</td>
      <td>Enhancements in CMSIS-Pack and CMSIS-Driver.\n
      Added: PackChk validation utility\n
      Removed support for GNU: Sourcery G++ Lite Edition for ARM</td>
    </tr>
    <tr>
      <td>4.0</td>
      <td>First release in CMSIS-Pack format.\n Added specifications for CMSIS-Pack, CMSIS-Driver</td>
    </tr>
    <tr>
      <td>3.30</td>
      <td>Maintenance release with enhancements in each component</td>
    </tr>
    <tr>
      <td>3.20</td>
      <td>Maintenance release with enhancements in each component</td>
    </tr>
    <tr>
      <td>3.01</td>
      <td>Added support for Cortex-M0+ processors</td>
    </tr>
    <tr>
      <td>3.00</td>
      <td>Added support for SC000 and SC300 processors\n
      Added support for GNU GCC Compiler\n
      Added CMSIS-RTOS API</td>
    </tr>
    <tr>
      <td>2.10</td>
      <td>Added CMSIS-DSP Library</td>
    </tr>
    <tr>
      <td>2.0</td>
      <td>Added support for Cortex-M4 processor</td>
    </tr>
    <tr>
      <td>1.30</td>
      <td>Reworked CMSIS startup concept</td>
    </tr>
    <tr>
      <td>1.01</td>
      <td>Added support for Cortex-M0 processor</td>
    </tr>
    <tr>
      <td>1.00</td>
      <td>Initial release of CMSIS-Core (Cortex-M) for Cortex-M3 processor</td>
    </tr>
</table>

*/
